"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#wfbhp5!a2#*0u4e1_142=+__gii8xifkjo-k8ghy@)ncq1ncp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['localhost', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'relationship_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django-models.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'relationship_app' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django-models.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Use CustomUser from bookshelf app
AUTH_USER_MODEL = 'bookshelf.CustomUser'

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Use CustomUser as the default user model
AUTH_USER_MODEL = 'relationship_app.CustomUser'

# XSS Protection (browser-level)
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True

# Frame protection (prevent clickjacking)
X_FRAME_OPTIONS = 'DENY'

# HTTPS-only cookies (for production)
CSRF_COOKIE_SECURE = True   # Ensures CSRF cookie is sent over HTTPS only
SESSION_COOKIE_SECURE = True  # Same for session cookie

# Content Security Policy (CSP)
# Example: csp = "default-src 'self'; script-src 'self' https://trusted.cdn.com"
CSP_DEFAULT_SRC = "'self'"
CSP_SCRIPT_SRC = "'self'"
CSP_STYLE_SRC = "'self' 'unsafe-inline'"
CSP_IMG_SRC = "'self' data:"
CSP_OBJECT_SRC = "'none'"

# Documentation
# SECURITY MEASURES IMPLEMENTED
# - DEBUG = False: Disables debug mode in production
# - SECURE_BROWSER_XSS_FILTER: Enables XSS filtering in supported browsers
# - SECURE_CONTENT_TYPE_NOSNIFF: Prevents MIME type sniffing
# - X_FRAME_OPTIONS = 'DENY': Blocks iframe embedding (clickjacking protection)
# - CSRF_COOKIE_SECURE & SESSION_COOKIE_SECURE: Cookies only over HTTPS
# - CSP headers simulated to restrict content sources and reduce XSS risk
# - All forms include {% csrf_token %} for CSRF protection
# - ORM used instead of raw SQL to prevent injection

# =============================================================================
# SECURITY SETTINGS FOR HTTPS AND SECURE COMMUNICATION
# =============================================================================

# Step 1: Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT = True  # Forces HTTPS; disable in development if no SSL

# HTTP Strict Transport Security (HSTS)
# Tells browsers to always use HTTPS for this domain
SECURE_HSTS_SECONDS = 31536000  # 1 year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Applies HSTS to all subdomains
SECURE_HSTS_PRELOAD = True  # Enables HSTS preload list submission

# Step 2: Secure Cookies (sent only over HTTPS)
SESSION_COOKIE_SECURE = True  # Session cookie won't be sent over HTTP
CSRF_COOKIE_SECURE = True    # CSRF cookie requires HTTPS

# Step 3: Additional Security Headers
X_FRAME_OPTIONS = 'DENY'  # Prevent clickjacking via iframe embedding
SECURE_CONTENT_TYPE_NOSNIFF = True  # Prevent MIME-type sniffing
SECURE_BROWSER_XSS_FILTER = True   # Enable XSS filter in supported browsers
